using Dapper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Data;

namespace DapperHC.Models
{
    public class DapperORM
    {
        private static string  connectionString= @"Data Source=MicroWin10-1649\HEADCOUNTVCILQ;Initial Catalog = HeadCountData;Integrated Security=SSPI;";

        public static void ExecuteWithoutReturn(string procedureName,DynamicParameters param = null)
        {
            using (SqlConnection sqlCon = new SqlConnection(connectionString))
            {
                sqlCon.Open();
                sqlCon.Execute(procedureName,param,commandType:CommandType.StoredProcedure);

            }
        }
        //DapperORM.ExecuteReturnScalar<int>(_,_)

        public static T ExecuteReturnScalar<T>(string procedureName, DynamicParameters param = null)
        {
            using (SqlConnection sqlCon = new SqlConnection(connectionString))
            {
                sqlCon.Open();
                return (T)Convert.ChangeType(sqlCon.Execute(procedureName, param, commandType: CommandType.StoredProcedure),typeof (T));

            }
        }

        //DapperORM.ReturnList<HCModel> <=IEnumerable<HCModel>
        public static IEnumerable<T> ReturnList<T>(string procedureName, DynamicParameters param = null)
        {
            using (SqlConnection sqlCon = new SqlConnection(connectionString))
            {
                sqlCon.Open();
                return sqlCon.Query<T>(procedureName, param, commandType: CommandType.StoredProcedure);

            }
        }
    }
}
